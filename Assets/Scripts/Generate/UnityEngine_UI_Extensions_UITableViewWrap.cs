//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class UnityEngine_UI_Extensions_UITableViewWrap
{
	public static void Register(LuaState L)
	{
		L.BeginClass(typeof(UnityEngine.UI.Extensions.UITableView), typeof(UnityEngine.MonoBehaviour));
		L.RegFunction("Init", Init);
		L.RegFunction("SetScrollMinDis", SetScrollMinDis);
		L.RegFunction("GetCellWithIndex", GetCellWithIndex);
		L.RegFunction("Reload", Reload);
		L.RegFunction("SetToTop", SetToTop);
		L.RegFunction("SetToBottom", SetToBottom);
		L.RegFunction("GoTo", GoTo);
		L.RegFunction("__eq", op_Equality);
		L.RegFunction("__tostring", ToLua.op_ToString);
		L.RegVar("CellCount", get_CellCount, set_CellCount);
		L.RegVar("onCellInit", get_onCellInit, set_onCellInit);
		L.RegVar("onProcessClick", get_onProcessClick, set_onProcessClick);
		L.RegVar("onProcessPress", get_onProcessPress, set_onProcessPress);
		L.RegVar("onScrollCompleted", get_onScrollCompleted, set_onScrollCompleted);
		L.RegVar("onTableScrolling", get_onTableScrolling, set_onTableScrolling);
		L.RegVar("Loop", get_Loop, set_Loop);
		L.RegFunction("OnTableScrolling", UnityEngine_UI_Extensions_UITableView_OnTableScrolling);
		L.RegFunction("OnScrollCompleted", UnityEngine_UI_Extensions_UITableView_OnScrollCompleted);
		L.RegFunction("OnProcessPress", UnityEngine_UI_Extensions_UITableView_OnProcessPress);
		L.RegFunction("OnProcessClick", UnityEngine_UI_Extensions_UITableView_OnProcessClick);
		L.RegFunction("OnCellInitEvent", UnityEngine_UI_Extensions_UITableView_OnCellInitEvent);
		L.EndClass();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Init(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			UnityEngine.UI.Extensions.UITableView obj = (UnityEngine.UI.Extensions.UITableView)ToLua.CheckObject<UnityEngine.UI.Extensions.UITableView>(L, 1);
			obj.Init();
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int SetScrollMinDis(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			UnityEngine.UI.Extensions.UITableView obj = (UnityEngine.UI.Extensions.UITableView)ToLua.CheckObject<UnityEngine.UI.Extensions.UITableView>(L, 1);
			float arg0 = (float)LuaDLL.luaL_checknumber(L, 2);
			obj.SetScrollMinDis(arg0);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int GetCellWithIndex(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			UnityEngine.UI.Extensions.UITableView obj = (UnityEngine.UI.Extensions.UITableView)ToLua.CheckObject<UnityEngine.UI.Extensions.UITableView>(L, 1);
			int arg0 = (int)LuaDLL.luaL_checknumber(L, 2);
			UnityEngine.UI.Extensions.UITableViewCell o = obj.GetCellWithIndex(arg0);
			ToLua.Push(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Reload(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 1)
			{
				UnityEngine.UI.Extensions.UITableView obj = (UnityEngine.UI.Extensions.UITableView)ToLua.CheckObject<UnityEngine.UI.Extensions.UITableView>(L, 1);
				obj.Reload();
				return 0;
			}
			else if (count == 2 && TypeChecker.CheckTypes<int>(L, 2))
			{
				UnityEngine.UI.Extensions.UITableView obj = (UnityEngine.UI.Extensions.UITableView)ToLua.CheckObject<UnityEngine.UI.Extensions.UITableView>(L, 1);
				int arg0 = (int)LuaDLL.lua_tonumber(L, 2);
				obj.Reload(arg0);
				return 0;
			}
			else if (count == 2 && TypeChecker.CheckTypes<bool>(L, 2))
			{
				UnityEngine.UI.Extensions.UITableView obj = (UnityEngine.UI.Extensions.UITableView)ToLua.CheckObject<UnityEngine.UI.Extensions.UITableView>(L, 1);
				bool arg0 = LuaDLL.lua_toboolean(L, 2);
				obj.Reload(arg0);
				return 0;
			}
			else if (count == 3)
			{
				UnityEngine.UI.Extensions.UITableView obj = (UnityEngine.UI.Extensions.UITableView)ToLua.CheckObject<UnityEngine.UI.Extensions.UITableView>(L, 1);
				int arg0 = (int)LuaDLL.luaL_checknumber(L, 2);
				bool arg1 = LuaDLL.luaL_checkboolean(L, 3);
				obj.Reload(arg0, arg1);
				return 0;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to method: UnityEngine.UI.Extensions.UITableView.Reload");
			}
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int SetToTop(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			UnityEngine.UI.Extensions.UITableView obj = (UnityEngine.UI.Extensions.UITableView)ToLua.CheckObject<UnityEngine.UI.Extensions.UITableView>(L, 1);
			obj.SetToTop();
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int SetToBottom(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			UnityEngine.UI.Extensions.UITableView obj = (UnityEngine.UI.Extensions.UITableView)ToLua.CheckObject<UnityEngine.UI.Extensions.UITableView>(L, 1);
			obj.SetToBottom();
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int GoTo(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			UnityEngine.UI.Extensions.UITableView obj = (UnityEngine.UI.Extensions.UITableView)ToLua.CheckObject<UnityEngine.UI.Extensions.UITableView>(L, 1);
			int arg0 = (int)LuaDLL.luaL_checknumber(L, 2);
			obj.GoTo(arg0);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int op_Equality(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			UnityEngine.Object arg0 = (UnityEngine.Object)ToLua.ToObject(L, 1);
			UnityEngine.Object arg1 = (UnityEngine.Object)ToLua.ToObject(L, 2);
			bool o = arg0 == arg1;
			LuaDLL.lua_pushboolean(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_CellCount(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UnityEngine.UI.Extensions.UITableView obj = (UnityEngine.UI.Extensions.UITableView)o;
			int ret = obj.CellCount;
			LuaDLL.lua_pushinteger(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index CellCount on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_onCellInit(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UnityEngine.UI.Extensions.UITableView obj = (UnityEngine.UI.Extensions.UITableView)o;
			UnityEngine.UI.Extensions.UITableView.OnCellInitEvent ret = obj.onCellInit;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index onCellInit on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_onProcessClick(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UnityEngine.UI.Extensions.UITableView obj = (UnityEngine.UI.Extensions.UITableView)o;
			UnityEngine.UI.Extensions.UITableView.OnProcessClick ret = obj.onProcessClick;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index onProcessClick on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_onProcessPress(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UnityEngine.UI.Extensions.UITableView obj = (UnityEngine.UI.Extensions.UITableView)o;
			UnityEngine.UI.Extensions.UITableView.OnProcessPress ret = obj.onProcessPress;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index onProcessPress on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_onScrollCompleted(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UnityEngine.UI.Extensions.UITableView obj = (UnityEngine.UI.Extensions.UITableView)o;
			UnityEngine.UI.Extensions.UITableView.OnScrollCompleted ret = obj.onScrollCompleted;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index onScrollCompleted on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_onTableScrolling(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UnityEngine.UI.Extensions.UITableView obj = (UnityEngine.UI.Extensions.UITableView)o;
			UnityEngine.UI.Extensions.UITableView.OnTableScrolling ret = obj.onTableScrolling;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index onTableScrolling on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_Loop(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UnityEngine.UI.Extensions.UITableView obj = (UnityEngine.UI.Extensions.UITableView)o;
			bool ret = obj.Loop;
			LuaDLL.lua_pushboolean(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index Loop on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_CellCount(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UnityEngine.UI.Extensions.UITableView obj = (UnityEngine.UI.Extensions.UITableView)o;
			int arg0 = (int)LuaDLL.luaL_checknumber(L, 2);
			obj.CellCount = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index CellCount on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_onCellInit(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UnityEngine.UI.Extensions.UITableView obj = (UnityEngine.UI.Extensions.UITableView)o;
			UnityEngine.UI.Extensions.UITableView.OnCellInitEvent arg0 = (UnityEngine.UI.Extensions.UITableView.OnCellInitEvent)ToLua.CheckDelegate<UnityEngine.UI.Extensions.UITableView.OnCellInitEvent>(L, 2);
			obj.onCellInit = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index onCellInit on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_onProcessClick(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UnityEngine.UI.Extensions.UITableView obj = (UnityEngine.UI.Extensions.UITableView)o;
			UnityEngine.UI.Extensions.UITableView.OnProcessClick arg0 = (UnityEngine.UI.Extensions.UITableView.OnProcessClick)ToLua.CheckDelegate<UnityEngine.UI.Extensions.UITableView.OnProcessClick>(L, 2);
			obj.onProcessClick = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index onProcessClick on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_onProcessPress(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UnityEngine.UI.Extensions.UITableView obj = (UnityEngine.UI.Extensions.UITableView)o;
			UnityEngine.UI.Extensions.UITableView.OnProcessPress arg0 = (UnityEngine.UI.Extensions.UITableView.OnProcessPress)ToLua.CheckDelegate<UnityEngine.UI.Extensions.UITableView.OnProcessPress>(L, 2);
			obj.onProcessPress = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index onProcessPress on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_onScrollCompleted(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UnityEngine.UI.Extensions.UITableView obj = (UnityEngine.UI.Extensions.UITableView)o;
			UnityEngine.UI.Extensions.UITableView.OnScrollCompleted arg0 = (UnityEngine.UI.Extensions.UITableView.OnScrollCompleted)ToLua.CheckDelegate<UnityEngine.UI.Extensions.UITableView.OnScrollCompleted>(L, 2);
			obj.onScrollCompleted = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index onScrollCompleted on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_onTableScrolling(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UnityEngine.UI.Extensions.UITableView obj = (UnityEngine.UI.Extensions.UITableView)o;
			UnityEngine.UI.Extensions.UITableView.OnTableScrolling arg0 = (UnityEngine.UI.Extensions.UITableView.OnTableScrolling)ToLua.CheckDelegate<UnityEngine.UI.Extensions.UITableView.OnTableScrolling>(L, 2);
			obj.onTableScrolling = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index onTableScrolling on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_Loop(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UnityEngine.UI.Extensions.UITableView obj = (UnityEngine.UI.Extensions.UITableView)o;
			bool arg0 = LuaDLL.luaL_checkboolean(L, 2);
			obj.Loop = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index Loop on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int UnityEngine_UI_Extensions_UITableView_OnTableScrolling(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);
			LuaFunction func = ToLua.CheckLuaFunction(L, 1);

			if (count == 1)
			{
				Delegate arg1 = DelegateTraits<UnityEngine.UI.Extensions.UITableView.OnTableScrolling>.Create(func);
				ToLua.Push(L, arg1);
			}
			else
			{
				LuaTable self = ToLua.CheckLuaTable(L, 2);
				Delegate arg1 = DelegateTraits<UnityEngine.UI.Extensions.UITableView.OnTableScrolling>.Create(func, self);
				ToLua.Push(L, arg1);
			}
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int UnityEngine_UI_Extensions_UITableView_OnScrollCompleted(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);
			LuaFunction func = ToLua.CheckLuaFunction(L, 1);

			if (count == 1)
			{
				Delegate arg1 = DelegateTraits<UnityEngine.UI.Extensions.UITableView.OnScrollCompleted>.Create(func);
				ToLua.Push(L, arg1);
			}
			else
			{
				LuaTable self = ToLua.CheckLuaTable(L, 2);
				Delegate arg1 = DelegateTraits<UnityEngine.UI.Extensions.UITableView.OnScrollCompleted>.Create(func, self);
				ToLua.Push(L, arg1);
			}
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int UnityEngine_UI_Extensions_UITableView_OnProcessPress(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);
			LuaFunction func = ToLua.CheckLuaFunction(L, 1);

			if (count == 1)
			{
				Delegate arg1 = DelegateTraits<UnityEngine.UI.Extensions.UITableView.OnProcessPress>.Create(func);
				ToLua.Push(L, arg1);
			}
			else
			{
				LuaTable self = ToLua.CheckLuaTable(L, 2);
				Delegate arg1 = DelegateTraits<UnityEngine.UI.Extensions.UITableView.OnProcessPress>.Create(func, self);
				ToLua.Push(L, arg1);
			}
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int UnityEngine_UI_Extensions_UITableView_OnProcessClick(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);
			LuaFunction func = ToLua.CheckLuaFunction(L, 1);

			if (count == 1)
			{
				Delegate arg1 = DelegateTraits<UnityEngine.UI.Extensions.UITableView.OnProcessClick>.Create(func);
				ToLua.Push(L, arg1);
			}
			else
			{
				LuaTable self = ToLua.CheckLuaTable(L, 2);
				Delegate arg1 = DelegateTraits<UnityEngine.UI.Extensions.UITableView.OnProcessClick>.Create(func, self);
				ToLua.Push(L, arg1);
			}
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int UnityEngine_UI_Extensions_UITableView_OnCellInitEvent(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);
			LuaFunction func = ToLua.CheckLuaFunction(L, 1);

			if (count == 1)
			{
				Delegate arg1 = DelegateTraits<UnityEngine.UI.Extensions.UITableView.OnCellInitEvent>.Create(func);
				ToLua.Push(L, arg1);
			}
			else
			{
				LuaTable self = ToLua.CheckLuaTable(L, 2);
				Delegate arg1 = DelegateTraits<UnityEngine.UI.Extensions.UITableView.OnCellInitEvent>.Create(func, self);
				ToLua.Push(L, arg1);
			}
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}
}


//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class ColaFramework_ISceneCharacterWrap
{
	public static void Register(LuaState L)
	{
		L.BeginClass(typeof(ColaFramework.ISceneCharacter), null);
		L.RegFunction("SetPosition2D", SetPosition2D);
		L.RegFunction("SetRotation2D", SetRotation2D);
		L.RegFunction("Release", Release);
		L.RegVar("gameObject", get_gameObject, set_gameObject);
		L.RegVar("transform", get_transform, set_transform);
		L.RegVar("Position", get_Position, set_Position);
		L.RegVar("Rotation", get_Rotation, set_Rotation);
		L.RegVar("Direction", get_Direction, set_Direction);
		L.RegVar("Visible", get_Visible, set_Visible);
		L.EndClass();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int SetPosition2D(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 3);
			ColaFramework.ISceneCharacter obj = (ColaFramework.ISceneCharacter)ToLua.CheckObject<ColaFramework.ISceneCharacter>(L, 1);
			float arg0 = (float)LuaDLL.luaL_checknumber(L, 2);
			float arg1 = (float)LuaDLL.luaL_checknumber(L, 3);
			obj.SetPosition2D(arg0, arg1);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int SetRotation2D(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 3);
			ColaFramework.ISceneCharacter obj = (ColaFramework.ISceneCharacter)ToLua.CheckObject<ColaFramework.ISceneCharacter>(L, 1);
			float arg0 = (float)LuaDLL.luaL_checknumber(L, 2);
			float arg1 = (float)LuaDLL.luaL_checknumber(L, 3);
			obj.SetRotation2D(arg0, arg1);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Release(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			ColaFramework.ISceneCharacter obj = (ColaFramework.ISceneCharacter)ToLua.CheckObject<ColaFramework.ISceneCharacter>(L, 1);
			obj.Release();
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_gameObject(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			ColaFramework.ISceneCharacter obj = (ColaFramework.ISceneCharacter)o;
			UnityEngine.GameObject ret = obj.gameObject;
			ToLua.PushSealed(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index gameObject on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_transform(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			ColaFramework.ISceneCharacter obj = (ColaFramework.ISceneCharacter)o;
			UnityEngine.Transform ret = obj.transform;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index transform on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_Position(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			ColaFramework.ISceneCharacter obj = (ColaFramework.ISceneCharacter)o;
			UnityEngine.Vector3 ret = obj.Position;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index Position on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_Rotation(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			ColaFramework.ISceneCharacter obj = (ColaFramework.ISceneCharacter)o;
			UnityEngine.Vector3 ret = obj.Rotation;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index Rotation on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_Direction(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			ColaFramework.ISceneCharacter obj = (ColaFramework.ISceneCharacter)o;
			UnityEngine.Vector3 ret = obj.Direction;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index Direction on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_Visible(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			ColaFramework.ISceneCharacter obj = (ColaFramework.ISceneCharacter)o;
			bool ret = obj.Visible;
			LuaDLL.lua_pushboolean(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index Visible on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_gameObject(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			ColaFramework.ISceneCharacter obj = (ColaFramework.ISceneCharacter)o;
			UnityEngine.GameObject arg0 = (UnityEngine.GameObject)ToLua.CheckObject(L, 2, typeof(UnityEngine.GameObject));
			obj.gameObject = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index gameObject on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_transform(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			ColaFramework.ISceneCharacter obj = (ColaFramework.ISceneCharacter)o;
			UnityEngine.Transform arg0 = (UnityEngine.Transform)ToLua.CheckObject<UnityEngine.Transform>(L, 2);
			obj.transform = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index transform on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_Position(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			ColaFramework.ISceneCharacter obj = (ColaFramework.ISceneCharacter)o;
			UnityEngine.Vector3 arg0 = ToLua.ToVector3(L, 2);
			obj.Position = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index Position on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_Rotation(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			ColaFramework.ISceneCharacter obj = (ColaFramework.ISceneCharacter)o;
			UnityEngine.Vector3 arg0 = ToLua.ToVector3(L, 2);
			obj.Rotation = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index Rotation on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_Direction(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			ColaFramework.ISceneCharacter obj = (ColaFramework.ISceneCharacter)o;
			UnityEngine.Vector3 arg0 = ToLua.ToVector3(L, 2);
			obj.Direction = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index Direction on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_Visible(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			ColaFramework.ISceneCharacter obj = (ColaFramework.ISceneCharacter)o;
			bool arg0 = LuaDLL.luaL_checkboolean(L, 2);
			obj.Visible = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index Visible on a nil value");
		}
	}
}

